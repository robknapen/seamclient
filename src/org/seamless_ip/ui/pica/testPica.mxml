<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ wallace: testPica.mxml
  ~ ==============================================================================
  ~ This work has been carried out as part of the SEAMLESS Integrated Framework
  ~ project, EU 6th Framework Programme, contract no. 010036-2 and/or as part
  ~ of the SEAMLESS association.
  ~
  ~ Copyright (c) 2009 The SEAMLESS Association.
  ~
  ~ For more information: http://www.seamlessassociation.org;
  ~ email: info@seamless-if.org
  ~
  ~ The contents of this file is subject to the SEAMLESS Association License for
  ~ software infrastructure and model components Version 1.1 (the "License");
  ~ you may not use this file except in compliance with the License. You may
  ~ obtain a copy of the License at http://www.seamlessassociation.org/License.htm
  ~
  ~ Software distributed under the License is distributed on an "AS IS"  basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
  ~ the specific governing rights and limitations.
  ~
  ~ The Initial Developers of the Original Code are:
  ~  - Benny Johnsson; Lund University
  ~  - Rob Knapen; Alterra, Wageningen UR
  ~  - Michiel Rop; Alterra, Wageningen UR / ilionX
  ~  - Lorenzo Ruinelli; IDSIA Dalle Molle Institute for Artificial Intelligence
  ~ ================================================================================
  ~ Contributor(s): N/A
  ~ ================================================================================
  -->

<mx:Panel creationComplete="{getPica()}"
          layout="vertical"
          xmlns:mx="http://www.adobe.com/2006/mxml">

    <mx:Script>
        <![CDATA[
        import mx.controls.Alert;

        import org.seamless_ip.services.remoting.RequestProgressEvent;

        private var _picaService:PicaService;

        public function PicaServiceSingelton():PicaService {
            if (_picaService == null) {
                _picaService = new PicaService();
                _picaService.addEventListener(RequestProgressEvent.REQUEST_SEND, RequestSend);
                _picaService.addEventListener(RequestProgressEvent.REQUEST_COMPLETED, RequestCompleted);
                _picaService.addEventListener(RequestProgressEvent.REQUEST_FAILED, RequestFailed);
            }
            return _picaService;
        }

        public function getPica():void {
            PicaServiceSingelton().findAllByProjectID(120);
        }

        public function RequestSend(event:RequestProgressEvent):void {
        }

        public function RequestCompleted(event:RequestProgressEvent):void {
            PicaServiceSingelton().instutionalcompatibilities;
        }

        public function RequestFailed(event:RequestProgressEvent):void {
            Alert.show(event.message);
        }
        ]]>
    </mx:Script>
</mx:Panel>
