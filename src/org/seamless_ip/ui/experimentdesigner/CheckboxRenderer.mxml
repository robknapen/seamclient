<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ wallace: CheckboxRenderer.mxml
  ~ ==============================================================================
  ~ This work has been carried out as part of the SEAMLESS Integrated Framework
  ~ project, EU 6th Framework Programme, contract no. 010036-2 and/or as part
  ~ of the SEAMLESS association.
  ~
  ~ Copyright (c) 2009 The SEAMLESS Association.
  ~
  ~ For more information: http://www.seamlessassociation.org;
  ~ email: info@seamless-if.org
  ~
  ~ The contents of this file is subject to the SEAMLESS Association License for
  ~ software infrastructure and model components Version 1.1 (the "License");
  ~ you may not use this file except in compliance with the License. You may
  ~ obtain a copy of the License at http://www.seamlessassociation.org/License.htm
  ~
  ~ Software distributed under the License is distributed on an "AS IS"  basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
  ~ the specific governing rights and limitations.
  ~
  ~ The Initial Developers of the Original Code are:
  ~  - Benny Johnsson; Lund University
  ~  - Rob Knapen; Alterra, Wageningen UR
  ~  - Michiel Rop; Alterra, Wageningen UR / ilionX
  ~  - Lorenzo Ruinelli; IDSIA Dalle Molle Institute for Artificial Intelligence
  ~ ================================================================================
  ~ Contributor(s): N/A
  ~ ================================================================================
  -->
<mx:VBox
        xmlns:mx="http://www.adobe.com/2006/mxml"
        width="100%"
        height="100%"
        horizontalAlign="center"
        verticalAlign="middle"
        creationComplete="onCreationComplete()"
        >

    <mx:Script>
	  	<![CDATA[
	  	import mx.controls.DataGrid;

        import org.seamless_ip.services.transferobjects.crop.Crop;
        import org.seamless_ip.services.transferobjects.farm.RepresentativeFarm;
        import org.seamless_ip.services.transferobjects.pica.CrucialInstitutionalAspect;
        import org.seamless_ip.services.transferobjects.pica.PICAIndicatorGeneral;

        [Bindable]
        public var editable:Boolean = true;


        // This is a workaround to be able to disable
        // checkboxes rendered on a DataGrid
        // ...else also if the parent DataGrid is set as editable=false
        // the CheckBox is editable/enabled!
        //
        public function onCreationComplete():void
        {
            if (this.parent != null)
                if (this.parent.parent is DataGrid)
                    this.editable = DataGrid(this.parent.parent).editable;
        }


        /**
         * Overrides the setter for the data property to ensure that the
         * selected property of the checkbox matches the value of the
         * selected property of the represented object.
         *
         * @param value Object to set as data
         */
        override public function set data(value:Object):void
        {
            if (value != null)
            {
                super.data = value;
                if (value is RepresentativeFarm) {
                    cb.selected = (value as RepresentativeFarm).selected;
                } else if (value is Crop) {
                    cb.selected = (value as Crop).selected;
                } else if (value is CrucialInstitutionalAspect) {
                    cb.selected = (value as CrucialInstitutionalAspect).selected;
                } else if (value is PICAIndicatorGeneral) {
                    cb.selected = (value as PICAIndicatorGeneral).selected;
                }

            }
        }


        /**
         * Event handler to dispatch a change event on mouse clicks on the
         * checkbox.
         */
        private function onClick(e:MouseEvent):void
        {
            dispatchEvent(new Event('change'));
        }
	  	]]>
	</mx:Script>

    <mx:CheckBox id="cb"
                 click="data.selected=!data.selected;onClick(event);"
                 enabled="{editable}"
                 selected="{data.selected}"
                 width="16" height="16"
                 toolTip="Select this item"
            />

</mx:VBox>
