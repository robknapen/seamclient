<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ wallace: UserDefinition.mxml
  ~ ==============================================================================
  ~ This work has been carried out as part of the SEAMLESS Integrated Framework
  ~ project, EU 6th Framework Programme, contract no. 010036-2 and/or as part
  ~ of the SEAMLESS association.
  ~
  ~ Copyright (c) 2009 The SEAMLESS Association.
  ~
  ~ For more information: http://www.seamlessassociation.org;
  ~ email: info@seamless-if.org
  ~
  ~ The contents of this file is subject to the SEAMLESS Association License for
  ~ software infrastructure and model components Version 1.1 (the "License");
  ~ you may not use this file except in compliance with the License. You may
  ~ obtain a copy of the License at http://www.seamlessassociation.org/License.htm
  ~
  ~ Software distributed under the License is distributed on an "AS IS"  basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
  ~ the specific governing rights and limitations.
  ~
  ~ The Initial Developers of the Original Code are:
  ~  - Benny Johnsson; Lund University
  ~  - Rob Knapen; Alterra, Wageningen UR
  ~  - Michiel Rop; Alterra, Wageningen UR / ilionX
  ~  - Lorenzo Ruinelli; IDSIA Dalle Molle Institute for Artificial Intelligence
  ~ ================================================================================
  ~ Contributor(s): N/A
  ~ ================================================================================
  -->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         width="100%"
         height="100%"
         paddingTop="0"
         paddingBottom="2"
         horizontalAlign="center" verticalAlign="middle"
         horizontalCenter="0" verticalCenter="0"
         xmlns:ns="org.seamless_ip.ui.usermanagement.*" creationPolicy="all"
         showEffect="viewIn"
         hideEffect="viewOut">
    <mx:Fade id="viewIn" duration="600" alphaFrom="0" alphaTo="1"/>
    <mx:Fade id="viewOut" duration="100" alphaFrom="1" alphaTo="0"/>

    <!--
        View for editing a user.

        @author Michiel Rop
    -->
    <mx:Script>
		<![CDATA[
        import org.seamless_ip.services.transferobjects.seamproj.User;

        private var _user:User;

        public static const EDIT_PROJECT_ROLES:String = "editProjectRoles";
        public static const DISCARD:String = "discard";
        public static const SAVE:String = "save";
        public static const SHOW:String = "Show";
        public static const HIDE:String = "Hide";

        /** The locally updated user */
        public var unUpdatedUser:User;

        /** editMode true when a existing user is edited, false when a new user is created */
        public var editMode:Boolean;

        /* The mediator that deals with all requests from this view */
        private var userDefinitionMediator:UserDefinitionMediator;


        [Bindable]
        public function set user(user:User):void {
            _user = user;
            if (user != null) {
                unUpdatedUser = user.Clone() as User;
            }

        }

        public function get user():User {
            return _user;
        }

        public function clear():void {
            accountNameTextInput.text = "";
            firstNameTextInput.text = "";
            lastNameTextInput.text = "";
            instituteTextInput.text = "";
            passwordTextInput.text = "";
            emailTextInput.text = "";
        }

        public function update():void {
            if (user != null) {
                accountNameTextInput.text = user.accountName;
                firstNameTextInput.text = user.firstName;
                lastNameTextInput.text = user.lastName;
                instituteTextInput.text = user.institute;
                passwordTextInput.text = user.password;
                emailTextInput.text = user.email;
            }
        }


        private function saveHandler(event:MouseEvent):void {
            user.accountName = accountNameTextInput.text;
            user.firstName = firstNameTextInput.text;
            user.institute = instituteTextInput.text;
            user.lastName = lastNameTextInput.text;
            user.password = passwordTextInput.text;
            user.email = emailTextInput.text;
            dispatchEvent(new Event(SAVE));
        }

        private function editProjectRoleHandler(event:MouseEvent):void {
            dispatchEvent(new Event(EDIT_PROJECT_ROLES));
        }

        private function cancelHandler(event:MouseEvent):void {
            user = null;
            dispatchEvent(new Event(DISCARD));
        }

        public function show():void {
            visible = true;
            includeInLayout = true;
            dispatchEvent(new Event(SHOW));
        }

        public function hide():void {
            visible = false;
            includeInLayout = false;
            dispatchEvent(new Event(HIDE));
        }
		]]>
	</mx:Script>
    <mx:ViewStack width="100%" height="100%">
        <mx:Canvas width="100%" height="100%">
            <mx:Form width="100%" height="100%" borderStyle="none" cornerRadius="0">
                <mx:FormHeading label="User Details"/>
                <mx:FormItem width="100%" label="account name:">
                    <mx:TextInput width="100%" id="accountNameTextInput" text="{user.accountName}"/>
                </mx:FormItem>
                <mx:FormItem width="100%" label="first name:">
                    <mx:TextInput width="100%" id="firstNameTextInput" text="{user.firstName}"/>
                </mx:FormItem>
                <mx:FormItem width="100%" label="last name:">
                    <mx:TextInput width="100%" id="lastNameTextInput" text="{user.lastName}"/>
                </mx:FormItem>
                <mx:FormItem width="100%" label="institute:">
                    <mx:TextInput width="100%" id="instituteTextInput" text="{user.institute}"/>
                </mx:FormItem>
                <mx:FormItem width="100%" label="email:">
                    <mx:TextInput width="100%" id="emailTextInput" text="{user.email}"/>
                </mx:FormItem>
                <mx:FormItem width="100%" label="password:">
                    <mx:TextInput width="100%" id="passwordTextInput"
                                  text="{user.password}"
                                  displayAsPassword="true"
                            />
                </mx:FormItem>
            </mx:Form>
        </mx:Canvas>
    </mx:ViewStack>

    <mx:HBox width="100%" horizontalAlign="center" verticalAlign="middle">
        <mx:Button label="Ok"
                   width="120"
                   click="saveHandler(event)"
                   toolTip="Save all changes"
                   enabled="{user!=null}"
                   disabledIcon="@Embed('/img/icons/save_edit_d.gif')"
                   icon="@Embed('/img/icons/save_edit.gif')"/>
        <mx:Button label="Cancel"
                   width="120"
                   click="cancelHandler(event)"
                   toolTip="Discard all changes"
                   disabledIcon="@Embed('/img/icons/delete_edit_d.gif')"
                   icon="@Embed('/img/icons/delete_edit.gif')"
                   enabled="{user!=null}"/>
    </mx:HBox>
</mx:VBox>
	
	

