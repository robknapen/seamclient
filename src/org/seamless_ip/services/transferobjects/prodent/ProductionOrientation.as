/* wallace: ProductionOrientation.as
 * ==============================================================================
 * (This code was generated by a tool)
 * ==============================================================================
 * This work has been carried out as part of the SEAMLESS Integrated Framework
 * project, EU 6th Framework Programme, contract no. 010036-2 and/or as part
 * of the SEAMLESS association.
 *
 * Copyright (c) 2009 The SEAMLESS Association.
 *
 * For more information: http://www.seamlessassociation.org;
 * email: info@seamless-if.org
 *
 * The contents of this file is subject to the SEAMLESS Association License for
 * software infrastructure and model components Version 1.1 (the "License");
 * you may not use this file except in compliance with the License. You may
 * obtain a copy of the License at http://www.seamlessassociation.org/License.htm
 *
 * Software distributed under the License is distributed on an "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific governing rights and limitations.
 *
 * The Initial Developers of the Original Code are:
 *  - Benny Johnsson; Lund University
 *  - Rob Knapen; Alterra, Wageningen UR
 *  - Michiel Rop; Alterra, Wageningen UR / ilionX
 *  - Lorenzo Ruinelli; IDSIA Dalle Molle Institute for Artificial Intelligence
 * ================================================================================
 * Contributor(s): N/A
 * ================================================================================
 */
package org.seamless_ip.services.transferobjects.prodent
{
    import mx.collections.ArrayCollection;
    import org.seamless_ip.services.transferobjects.prodent.NutrientManagement;
    import org.seamless_ip.services.transferobjects.prodent.WaterManagement;
	import org.seamless_ip.services.transferobjects.utils.IClonable;

	[Bindable]
	[RemoteClass(alias="org.seamless_ip.services.transferobjects.prodent.ProductionOrientationTO")]

	public class ProductionOrientation implements IClonable	{
		public function ProductionOrientation()
		{
			beefManagements = new ArrayCollection();
			grassManagementAlternatives = new ArrayCollection();
			smallBeefRuminantManagements = new ArrayCollection();
		}	
			
		
		public var beefManagements: ArrayCollection;
		public var grassManagementAlternatives: ArrayCollection;
		public var id: String;
		public var label_en: String;
		public var maxNumberDifferentCrops: int;
		public var maxRotationLength: int;
		public var minRotationLength: int;
		public var nutrientmanagement: NutrientManagement;
		public var smallBeefRuminantManagements: ArrayCollection;
		public var watermanagement: WaterManagement;





		public function Clone():IClonable
		{
			var clone: ProductionOrientation = new ProductionOrientation();
			var item:IClonable;  
			for each (item in this.beefManagements)
				clone.beefManagements .addItem(item.Clone());
			for each (item in this.grassManagementAlternatives)
				clone.grassManagementAlternatives .addItem(item.Clone());
			clone.id = this.id;
			clone.label_en = this.label_en;
			clone.maxNumberDifferentCrops = this.maxNumberDifferentCrops;
			clone.maxRotationLength = this.maxRotationLength;
			clone.minRotationLength = this.minRotationLength;
			clone.nutrientmanagement = (NutrientManagement)(this.nutrientmanagement .Clone());
			for each (item in this.smallBeefRuminantManagements)
				clone.smallBeefRuminantManagements .addItem(item.Clone());
			clone.watermanagement = (WaterManagement)(this.watermanagement .Clone());
			return clone;
		}
	}
	
	
}
